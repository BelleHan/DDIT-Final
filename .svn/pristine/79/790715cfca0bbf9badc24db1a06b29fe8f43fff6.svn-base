package kr.or.fms.hq.service;

import java.sql.SQLException;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;

import kr.or.fms.command.PageMaker;
import kr.or.fms.command.SearchCriteria;
import kr.or.fms.hq.dao.BuyGoodsDAO;
import kr.or.fms.hq.dto.BuyGoodsDeVO;
import kr.or.fms.hq.dto.BuyGoodsVO;
import kr.or.fms.hq.dto.HqGoodsVO;
import kr.or.fms.sup.dto.SupGoodsVO;

public class BuyGoodsServiceImpl implements BuyGoodsService {

	private BuyGoodsDAO buyGoodsDAO;
	public void setBuyGoodsDAO(BuyGoodsDAO buyGoodsDAO) {
		this.buyGoodsDAO = buyGoodsDAO;
	}
	
	@Override
	public Map<String, Object> getSupGoodsList(SearchCriteria cri) throws SQLException {
		Map<String, Object> dataMap = new HashMap<String, Object>();
		
		//현재 page번호에 맞는 리스트를 perPageNum 개수만큼 가져오기
		List<SupGoodsVO> buyGoodsList = buyGoodsDAO.selectBuyGoodsCriteria(cri);
		//전체리스트개수
		int totalCount = buyGoodsDAO.selectBuyGoodsCriteriaTotalCount(cri);
		
		//pageMaker생성
		PageMaker pageMaker = new PageMaker();
		pageMaker.setCri(cri);
		pageMaker.setTotalCount(totalCount);
		
		dataMap.put("buyGoodsList", buyGoodsList);
		dataMap.put("pageMaker", pageMaker);
		
		return dataMap;
		
	}
	
	@Override
	public void registBuyGoods(BuyGoodsVO buyGoods) throws SQLException {
		buyGoodsDAO.insertBuyGoods(buyGoods);
	}

	@Override
	public void registBuyGoodsDe(BuyGoodsDeVO buyGoodsDe) throws SQLException {
		buyGoodsDAO.insertBuyGoodsDe(buyGoodsDe);
	}

	@Override
	public void updateBuyGoods(BuyGoodsVO buyGoods) throws SQLException {
		buyGoodsDAO.updateBuyGoods(buyGoods);
	}

	@Override
	public void registHqGoods(HqGoodsVO hqGoods) throws SQLException {
		buyGoodsDAO.insertHqGoods(hqGoods);
	}



}
