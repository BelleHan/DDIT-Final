package kr.or.fms.hq.controller;

import java.sql.SQLException;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.servlet.ModelAndView;

import kr.or.fms.command.OutRegistCommand;
import kr.or.fms.command.SearchCriteria;
import kr.or.fms.controller.HqController;
import kr.or.fms.dto.MenuVO;
import kr.or.fms.exception.InvalidPasswordException;
import kr.or.fms.exception.NotFoundIdException;
import kr.or.fms.hq.dto.OutVO;
import kr.or.fms.hq.service.EmpService;
import kr.or.fms.hq.service.InOutService;
import kr.or.fms.service.CodeService;
import kr.or.fms.service.MenuService;

@Controller
@RequestMapping("/hq")
public class OutPlanCotroller {
	
	 @Autowired
		InOutService inOutService;
	  
 
	// 출고계획
	@RequestMapping(value = "/inout/Outdetail", method = RequestMethod.GET)
	public ModelAndView OutPlan(SearchCriteria cri, ModelAndView mnv) throws SQLException {
		String url = "hq/OutPlanList";
		
		Map<String, Object> dataMap = inOutService.getOutList(cri);
		
		mnv.addAllObjects(dataMap);
		mnv.setViewName(url);
		
		return mnv;
	}
	 @RequestMapping(value = "/inout/outRegist.do", method = RequestMethod.POST)
		public ResponseEntity<String> outRegist(@RequestBody OutRegistCommand regReq) throws SQLException {
			
			// 데이터 insert 로직
			
			ResponseEntity<String> entity=null;
			
			
	 		OutVO out = regReq.toOutVO();
	 		
	 		try {
	 			inOutService.regist(out);
	 			entity = new ResponseEntity<String>("regist", HttpStatus.OK);
	 			
	 		}catch (SQLException e) {
	 			e.printStackTrace();
	 			entity = new ResponseEntity<String>(e.getMessage(),
						HttpStatus.INTERNAL_SERVER_ERROR);
	 		}
	 		
			
	 		return entity;
		
		}
		
		
		@RequestMapping("/inout/outmodify.do")
		public ModelAndView modifyForm(String out_code,ModelAndView mnv)throws SQLException{
			String url="hq/OutPlanListModify";
			
			OutVO out = inOutService.getOutForModify(out_code);
			
			mnv.addObject("out",out);				
			mnv.setViewName(url);
			
			return mnv;
		}
		
		
		/*//입출고 계획 
	 	@RequestMapping(value="/inout/plan", method = RequestMethod.GET)
	 	public ModelAndView inOutList(SearchCriteria cri,ModelAndView mnv) throws SQLException {
	 		
	 		String url="hq/outList";
	 		
	 		Map<String, Object> dataMap = inOutService.getOutList(cri);
	 		
	 		mnv.addObject("dataMap", dataMap);
	 		mnv.setViewName(url);
	 	
	 		return mnv;
	 	}
	 	
	 	// 상세정보
	 	
	 	@RequestMapping("/inout/outdetail.do")
	 	public ModelAndView outdetail(String ocode, @RequestParam(defaultValue="")String from, HttpServletRequest request, ModelAndView mnv) throws SQLException {
	 		
	 		String url = "hq/Out_detail";
	 		
	 		
	 		OutVO out = inOutService.getOut(ocode);
	 		
	 		
	 		mnv.addObject("out", out);
	 		mnv.setViewName(url);
	 		
	 		return mnv;
	 		
	 		
	 	}
	 	// 수정폼
	 	@RequestMapping("/inout/outmodifyForm.do")
	 	public ModelAndView OutModifyForm(String ocode, ModelAndView mnv) throws Exception {
	 		String url = "hq/Out_modify";
	 		
	 		OutVO out = inOutService.getOutForModify(ocode);
	 		
	 		
	 		mnv.addObject("out", out);
	 		mnv.setViewName(url);
	 		
	 		return mnv;
	 	}
	 	//수정
	 	@RequestMapping(value="/inout/outmodify.do",method=RequestMethod.POST)
	 	public String outModify(OutModifyCommand modifyReq, RedirectAttributes rttr, HttpServletRequest request) throws Exception {
	 		System.out.println("1");
	 		String url = "redirect:/hq/inout/outdetail.do";
	 		System.out.println("2");
	 		
	 		 OutVO out = modifyReq.toOutVO();
	 		
	 		 
	 		 inOutService.modifyOut(out);
	 		 
	 		
	 		rttr.addFlashAttribute("from", "modify");
	 		rttr.addAttribute("ocode", out.getOut_code());
	 		
	 		return url;
	 	}
	 	// 등록
	  	@RequestMapping("/inout/outRegistForm.do")
	  	public String registForm() {
	  		String url = "hq/outRegist";
	  		return url;
	  	}
	  	
	  	@RequestMapping("/inout/outRegist.do")
	  	public String outRegist(OutRegistCommand regReq, RedirectAttributes rttr)throws Exception{
	  		String url = "redirect:/hq/inout/plan";
	  		
	  		OutVO out = regReq.toOutVO();
	  		inOutService.regist(out);
	  		rttr.addFlashAttribute("from", "regist");
	  		return url;
	  	}
	*/
	
}
