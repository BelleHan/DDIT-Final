package kr.or.fms.fran.service;

import java.sql.SQLException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import kr.or.fms.command.PageMaker;
import kr.or.fms.command.SearchCriteria;
import kr.or.fms.dao.AttachDAO;
import kr.or.fms.dto.AttachVO;
import kr.or.fms.dto.ReturnDetailVO;
import kr.or.fms.dto.ReturnVO;
import kr.or.fms.fran.dao.FranReturnDAO;
import kr.or.fms.hq.dto.HqGoodsVO;

public class FranReturnServiceImpl implements FranReturnService {
	
	private FranReturnDAO franReturnDAO;
	public void setFranReturnDAO(FranReturnDAO franReturnDAO) {
		this.franReturnDAO = franReturnDAO;
	}
	
	private AttachDAO attachDAO;
	
	public void setAttachDAO(AttachDAO attachDAO) {
		this.attachDAO = attachDAO;
	}

	@Override
	public Map<String, Object> getReturnList(SearchCriteria cri) throws SQLException {
		
		Map<String, Object> dataMap = new HashMap<String, Object>();

		// 현재 page 번호에 맞는 리스트를 perPageNum 개수 만큼 가져오기.
		List<ReturnVO> franReturnList = franReturnDAO.selectBoardCriteria(cri);

		// 전체 board 개수
		int totalCount = franReturnDAO.selectBoardCriteriaTotalCount(cri);

		// PageMaker 생성.
		PageMaker pageMaker = new PageMaker();
		pageMaker.setCri(cri);
		pageMaker.setTotalCount(totalCount);

		dataMap.put("franReturnList", franReturnList);
		dataMap.put("pageMaker", pageMaker);

		return dataMap;

	}

	@Override
	public ReturnVO getReturn(String rcode) throws SQLException {
		
		ReturnVO returnDetail = franReturnDAO.selectBoardByRcode(rcode);
		return returnDetail;

	}

	@Override
	public void modify(ReturnVO returnVO) throws SQLException {
		
		franReturnDAO.updateReturnSt(returnVO);
		
	}

	@Override
	public void registFranReturn(ReturnVO returnVO) throws SQLException {
//		String return_code = "RE"+franReturnDAO.getSeqNextValue();

//		returnVO.setReturn_code(return_code);
		franReturnDAO.insertFranReturn(returnVO);

		if (returnVO.getAttachList() != null)
			for (AttachVO attach : returnVO.getAttachList()) {
//				attach.setBbs_no(bbs_no);
				attach.setFile_register(returnVO.getFran_code());
				attachDAO.insertAttach(attach);
			}
		
	}
	
	@Override
	public void registFranReturnDe(ReturnDetailVO returnDeVO) throws SQLException {
//		String return_code = "RE"+franReturnDAO.getSeqNextValue();
//		
//		returnDeVO.setReturn_code(return_code);
		franReturnDAO.insertFranReturnDe(returnDeVO);
		
//		if (returnVO.getAttachList() != null)
//			for (AttachVO attach : returnVO.getAttachList()) {
////				attach.setReturn_code(return_code);
//				attach.setFile_register(returnVO.getFran_code());
//				attachDAO.insertAttach(attach);
//			}
		
	}

	@Override
	public List<HqGoodsVO> getGoodsList(String goods) throws SQLException {

		List<HqGoodsVO> goodsList = franReturnDAO.selectGoodsList(goods);
		
		return goodsList;
		
	}

	@Override
	public AttachVO getAttachByAno(int ano) throws SQLException {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public void removeAttachByAno(int ano) throws SQLException {
		// TODO Auto-generated method stub
		
	}

	@Override
	public String getSeqCurrValue() throws SQLException {
		String return_code = franReturnDAO.getSeqCurrValue();
		return return_code;
	}

}
