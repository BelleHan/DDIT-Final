package kr.or.fms.hq.controller;

import java.sql.SQLException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;

import kr.or.fms.command.SearchCriteria;
import kr.or.fms.command.buyRequestCommand;
import kr.or.fms.hq.dto.BuyGoodsVO;
import kr.or.fms.hq.service.BuyGoodsService;
import kr.or.fms.service.CodeService;
import kr.or.fms.sup.dto.SupGoodsVO;

/**
 * Handles requests for the application home page.
 */
@Controller 
@RequestMapping("/hq")
public class HqGoodsController {
    
    @Autowired
    BuyGoodsService buyGoodsService;

    @Autowired
    CodeService codeService;
	
    private static final Logger logger = LoggerFactory.getLogger(HqController.class);
	

    @RequestMapping("/goods/manage")
    public String hqGoodsList(ModelAndView mnv) throws SQLException{
       String url="hq/goods/list";
       
       return url;
    }
    
    @RequestMapping("/goods/buy")
    public ModelAndView goodsList(SearchCriteria cri,@RequestParam Map<String,Object> map,String laca, String smca, String keyword, ModelAndView mnv) throws SQLException{
       String url = "hq/goods/buyGoodsList";
       
       cri.setPerPageNum(12);
       
       System.out.println("laca : " + laca);
       System.out.println("smca : " + smca);
       
       cri.getKeywordMap().put("laca", laca);
       cri.getKeywordMap().put("smca", smca);
       cri.getKeywordMap().put("keyword", keyword);
       
       Map<String, Object> dataMap = buyGoodsService.getSupGoodsSearchList(cri);
       
       mnv.addObject("map", map);
       mnv.addObject("dataMap", dataMap);
       mnv.setViewName(url);
       
       return mnv;
    }

//    @ResponseBody
//    @RequestMapping(value="/goods/searchGoodsList", method=RequestMethod.POST)
//    public ResponseEntity<Map<String, Object>> searchList(@RequestBody Map<String, String> data) throws SQLException{
//    	ResponseEntity<Map<String, Object>> entity = null;
//    	SearchCriteria criMap = new SearchCriteria();
//    	
//    	System.out.println("1234");
//    	
//    	criMap.setKeywordMap(data);
//    	criMap.setPage(data.get("page"));
//    	criMap.setPerPageNum(12);
//    	Map<String, Object> dataMap = new HashMap<String, Object>();
//    	try {
//			dataMap = buyGoodsService.getSupGoodsSearcgList(criMap);
//			entity = new ResponseEntity<Map<String, Object>>(dataMap, HttpStatus.OK);
//		} catch (SQLException e) {
//			e.printStackTrace();
//			entity = new ResponseEntity<Map<String, Object>>(dataMap, HttpStatus.INTERNAL_SERVER_ERROR);
//		}
//    	return entity;
//    }
//    
    @RequestMapping("/goods/detail")
    public String detail(@ModelAttribute("sup_goods_code") String sup_goods_code, Model model)throws SQLException{
    	String url = "hq/goods/detail";
    	
    	System.out.println(sup_goods_code);
    	
    	SupGoodsVO supGoods = buyGoodsService.getBuyGoodsByCode(sup_goods_code);
//    	String supContSt = buyGoodsService.getSupContSt(sup_goods_code);
//    	String codeName = codeService.getCodeName(supContSt);
    	
    	model.addAttribute("supGoods", supGoods);
//    	model.addAttribute("codeName", codeName);
    	return url;
    }
    
    //상품비교(선택된 상품들의 상세비교)
	@RequestMapping("/goods/compareGoods")
	public String compareGoods(String goodsDe, Model model)throws SQLException{
		String url = "hq/goods/compareGoods3";
		
		String[] goods = goodsDe.split(",");
//		List<SupGoodsVO> evenCompareList = new ArrayList<SupGoodsVO>();
//		List<SupGoodsVO> oddCompareList = new ArrayList<SupGoodsVO>();
		
//		for(int i = 0; i<goods.length;i++) {
//			System.out.println(goods[i]);
//	    	SupGoodsVO supGoods = buyGoodsService.getBuyGoodsByCode(goods[i]);
//	    	
//	    	evenCompareList.add(supGoods);
//		}
		
		
//		for(int i = 0; i<goods.length;i++;) {
//			System.out.println(goods[i]);
//			SupGoodsVO supGoods = buyGoodsService.getBuyGoodsByCode(goods[i]);
//			
//			if(i%2==0) {
//				evenCompareList.add(supGoods);
//				System.out.println("even"+i);
//				
//			}else {
//				oddCompareList.add(supGoods);
//				System.out.println("odd"+i);
//			}
//		}
		
//		List<Map<Integer, Object>> sampleList = new ArrayList<>();
		
		Map<Integer, Object> sampleList = new HashMap<Integer, Object>();
		
//		List<SupGoodsVO> list = null;
//		List<SupGoodsVO> list2 = null;
		
		for (int i = 0; i < goods.length; i++) {
			SupGoodsVO supGoods = buyGoodsService.getBuyGoodsByCode(goods[i]);
			if (sampleList == null || i % 2 == 0) {
				sampleList.put(i, supGoods);
			} else {
				sampleList.put(i, supGoods);
			}
		}
//			
//			System.out.println(goods[i]);
//	    	SupGoodsVO supGoods = buyGoodsService.getBuyGoodsByCode(goods[i]);
//	    	
//	    	System.out.println(i);
//	    	System.out.println(supGoods.getSup_code());
	    	
//	    	model.addAttribute("num"+i, i);
//	    	list.add(supGoods);
		
//		model.addAttribute("evenCompareList",evenCompareList);
//		model.addAttribute("oddCompareList",oddCompareList);
		model.addAttribute("sampleList",sampleList);
		
		return url;
	}
	

    @RequestMapping("/goods/request")
    public String buyReq(buyRequestCommand buyReq)throws SQLException{
    	String url = "hq/goods/buyReqSuccess";
    	
    	BuyGoodsVO buyGoods = buyReq.toBuyGoodsVO();
    	buyGoodsService.registBuyGoods(buyGoods);
//    	
//    	BuyGoodsDeVO buyGoodsDe = buyReq.toBuyGoodsDeVO();
//    	buyGoodsService.registBuyGoodsDe(buyGoodsDe);
//    	
    	return url;
    }

	
	@RequestMapping("/goods/buyReqForm")
	public String buyReqForm(String sup_goods_code, Model model)throws SQLException {
		String url = "hq/goods/buyReqForm";
		
		SupGoodsVO supGoods = buyGoodsService.getBuyGoodsByCode(sup_goods_code);
//    	String supContSt = buyGoodsService.getSupContSt(sup_goods_code);
//    	String codeName = codeService.getCodeName(supContSt);
    	
    	model.addAttribute("supGoods", supGoods);
//    	model.addAttribute("codeName", codeName);
    	return url;
	}
	


}