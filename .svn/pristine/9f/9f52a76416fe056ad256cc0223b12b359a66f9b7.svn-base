package kr.or.fms.controller;

import java.sql.SQLException;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.ModelAndView;

import kr.or.fms.command.SearchCriteria;
import kr.or.fms.dto.MenuVO;
import kr.or.fms.exception.InvalidPasswordException;
import kr.or.fms.exception.NotFoundIdException;
import kr.or.fms.fran.dto.FranVO;
import kr.or.fms.hq.service.ComListService;
import kr.or.fms.hq.service.EmpService;
import kr.or.fms.service.MenuService;

/**
 * Handles requests for the application home page.
 */
@Controller
@RequestMapping("/hq")
public class HqController {
	@Autowired
	MenuService menuService;
	
	@Autowired
	EmpService empService;
	
	@Autowired
	ComListService comListService;

	private static final Logger logger = LoggerFactory.getLogger(HqController.class);
	
	@RequestMapping("/com/frandetail.do")
	public ModelAndView detail(String fcode, @RequestParam(defaultValue="")String from, HttpServletRequest request, ModelAndView mnv) throws SQLException {
		
		String url = "hq/detail";
		
		FranVO fran = null;
		
		fran = comListService.getFran(fcode);
		
		mnv.addObject("fran", fran);
		mnv.setViewName(url);
		
		return mnv;
		
	}
	
	@RequestMapping(value = "/com/list", method = RequestMethod.GET)
	public ModelAndView comList(SearchCriteria cri, ModelAndView mnv) throws SQLException {
		String url = "hq/FLS_list";

		Map<String, Object> dataMap = comListService.getComList(cri);
		
		mnv.addAllObjects(dataMap);
		mnv.setViewName(url);
		
		return mnv;
	}
	
	@RequestMapping(value = "/index.do", method = RequestMethod.GET)
	public String home(Model model) {
		String url = "hq/index_hq";
		try {
			List<MenuVO> menuList = menuService.getMainMenuList();
			model.addAttribute("menuList", menuList);
		} catch (SQLException e) {
			e.printStackTrace();
			url = null;
		}
		
		return url;
	}
	
	@RequestMapping(value="/login", method=RequestMethod.POST)
	public String Login(String code, String pwd, HttpSession session, HttpServletRequest request) throws Exception {
		String url = "redirect:index.do";
		
		try {
			
			empService.login(code, pwd);
			//로그인 성공시
			session.setAttribute("loginUser", empService.getEmp(code));
			session.setMaxInactiveInterval(20*60);
			
		} catch (SQLException e) {
			e.printStackTrace();
			throw e; 
		} catch (NotFoundIdException | InvalidPasswordException e) {
			request.setAttribute("message", e.getMessage());
			url = "common/loginFail";
		} 
		return url;
	}
	
	@RequestMapping(value = "/main.do", method = RequestMethod.GET)
	public String main(Model model) {
		String url = "hq/hqhome";
		return url;
	}
	@RequestMapping(value = "/stock/detail", method = RequestMethod.GET)
	public String stock(Model model) {
		String url = "hq/index_hq2";
		try {
			List<MenuVO> menuList = menuService.getMainMenuList();
			model.addAttribute("menuList", menuList);
		} catch (SQLException e) {
			e.printStackTrace();
			url = null;
		}
		
		return url;
	}
	
	@RequestMapping(value = "/logout.do", method = RequestMethod.GET)
	public String logout(HttpSession session) {
		String url = "redirect:/";
		session.invalidate();

		return url;
	}
	
	
	@RequestMapping(value = "/common/loginForm", method = RequestMethod.GET)
	public String loginForm(@RequestParam(defaultValue="")String error, HttpServletResponse response) {
		String url = "common/loginForm";
		if (error.equals("1")) {
			response.setStatus(302);
		}
		return url;
	}
	
}