package kr.or.fms.logis.controller;

import java.sql.SQLException;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletResponse;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;

import kr.or.fms.command.SearchCriteria;
import kr.or.fms.dto.MenuVO;
import kr.or.fms.dto.ReturnVO;
import kr.or.fms.logis.service.ReturnService;
import kr.or.fms.service.MenuService;

@Controller
@RequestMapping("/logis")
public class LogisController {

	@Autowired
	MenuService menuService;
	@Autowired
	ReturnService returnService;
	
	@RequestMapping(value="/index", method=RequestMethod.GET)
	public String home(@RequestParam(defaultValue="ML00000")String mCode, Model model) throws SQLException{
		String url = "logis/index_logis";
		try {
			List<MenuVO> menuList = menuService.getLogisMenuList();
//			MenuVO menu = menuService.getMenuByMcode(mCode);

//			List<MenuVO> subMenuList = menuService.getSubMenuList("ML40000");

			model.addAttribute("menuList", menuList);
//			model.addAttribute("menu",menu);

//			model.addAttribute("subMenuList", subMenuList);

		} catch (SQLException e) {
			e.printStackTrace();
			url = null;
		}
		return url;
	}
	@RequestMapping(value="/common/loginFormLogis",method=RequestMethod.GET)
	public String loginForm(@RequestParam(defaultValue="")String error,HttpServletResponse response) {
		
		String url = "common/loginFormLogis";//response가 화면결정인자
		if(error.equals("1")) {
			response.setStatus(302);
		}
		return url;
	}
	@RequestMapping(value="/main")
	public String main() {
		String url ="logis/logishome";
		return url;
	}
	
	@RequestMapping("/subMenu")
	@ResponseBody
	public ResponseEntity<List<MenuVO>> subMenuToJSON(String mCode) throws Exception {
		ResponseEntity<List<MenuVO>> entity=null;
	
		List<MenuVO> subMenu = null;
		try {
			subMenu = menuService.getSubMenuList(mCode);			
		
			entity  = new ResponseEntity<List<MenuVO>>(subMenu,HttpStatus.OK);
		} catch (Exception e) {
			entity = new ResponseEntity<List<MenuVO>>(HttpStatus.INTERNAL_SERVER_ERROR);
			e.printStackTrace();
		}

		return entity;
	}
	
	@RequestMapping("/getMcode")
	@ResponseBody
	public ResponseEntity<MenuVO> getMcode(String mName)throws Exception{
		
		ResponseEntity<MenuVO> entity = null;
		try {
				MenuVO menu = menuService.getMenuByMname(mName);
				
				entity = new ResponseEntity<MenuVO>(menu, HttpStatus.OK) ;
		}catch(SQLException e) {
				entity = new ResponseEntity<MenuVO>(HttpStatus.INTERNAL_SERVER_ERROR) ;
		}
	
		
		return entity;
	}
	
	@RequestMapping("/common/loginTimeOut")
	public String loginTimeOut(Model model)throws Exception{
		
		String url ="security/sessionOut";
		
		model.addAttribute("message","세션이 만료되었습니다.\n 다시 로그인 하세요!");
		return url;
	}
	
	@RequestMapping("/common/loginExpired")
	public String loginExpired(Model model)throws Exception{
		String url ="security/sessionOut";

		model.addAttribute("message", "중복 로그인이 확인되었습니다. \\n"+"다시 로그인하면 다른 장치에서 로그인은 취소됩니다.");
		
		return url;
		
	}
	
	@RequestMapping("/return/list")
	public ModelAndView returnList(SearchCriteria cri, ModelAndView mnv)throws SQLException{
		String url="logis/return/list";		
		
		Map<String,Object> dataMap = returnService.getReturnList(cri);
		
		mnv.addObject("dataMap",dataMap);
		mnv.setViewName(url);
		
		return mnv;
	}
	
	@RequestMapping("/return/detail")
	public ModelAndView returnDetail(String rcode, ModelAndView mnv )throws SQLException{
		String url= "logis/return/detail";		
		
		ReturnVO returnDetail = returnService.getReturn(rcode);
		
		mnv.addObject("returnDetail", returnDetail);
		mnv.setViewName(url);
		
		return mnv;
	}
	
	@RequestMapping(value = "updateReturnSt.do", method = RequestMethod.GET)
	public String updateReturnSt(String rcode, String returnSt) throws SQLException {
		
//		String url = "redirect:/logis/return/detail.do?rcode=" + rcode;
		String url = "logis/return/success";
		
		ReturnVO returnVO = new ReturnVO();
		
		returnVO.setReturn_code(rcode);
		returnVO.setReturn_st(returnSt);
		
		returnService.modify(returnVO);
		
		return url;
	}
	
	
}
