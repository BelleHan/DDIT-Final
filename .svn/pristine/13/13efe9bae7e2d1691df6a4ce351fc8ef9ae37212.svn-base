<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="Out-Mapper">
	<!-- <sql id="searchOutMap">	
		<if test="keywordMap.fms_log!=null and !keywordMap.fms_log.equals('')">
			and e.logis_code like '%'||#{keywordMap.fms_log}||'%'			
		</if>
		<if test="keywordMap.fms_hq!=null and !keywordMap.fms_hq.equals('')">
			and f.hq_goods_code '%'||#{keywordMap.fms_hq}||'%'			
		</if>
		<if test="keywordMap.fms_outFran!=null and !keywordMap.fms_outFran.equals('')">
			and h.fran_code like '%'||#{keywordMap.fms_outFran}||'%'
		</if>		
		<if test="keywordMap.fms_outLogis!=null and !keywordMap.fms_outLogis.equals('')">
			and e.logis_code like '%'||#{keywordMap.fms_outLogis||'%'			
		</if>		
			
	</sql>  -->
	
	<sql id="searchOutTakingMap">	
		<if test="keywordMap.fms_logis!=null">
<!-- 			and b.out_loca like '%'||#{keywordMap.fms_logis}||'%' -->
			and (out_loca = #{keywordMap.fms_logis} or out_loca = #{keywordMap.fms_logis})			
		</if>
<!-- 		<if test="keywordMap.fms_fran!=null"> -->
<!-- 			and b.out_loca like '%'||#{keywordMap.fms_fran}||'%'			 -->
<!-- 		</if> -->
		<if test="keywordMap.fms_st!=null">
			and b.out_st like '%'||#{keywordMap.fms_st}||'%'			
		</if>
		<if test="keywordMap.start_date!=null">
		    and <![CDATA[b.out_date >= #{keywordMap.start_date}]]>
	    			
		</if>
		<if test="keywordMap.end_date!=null">
			and <![CDATA[b.out_date <= #{keywordMap.end_date}]]>			
		</if>
	</sql>
	
	
	<select id="selectOutList" resultType="out">
		select *
		from out
		where out_code is not null
		order by out_code asc
	</select>
	
	<select id="OutSearchList" resultType="out">
		select *
		from out
		where out_code is not null
		order by out_code asc
	</select>
	
	<update id="insertOutPlan">
		insert 
		into
		out(out_code, hq_goods_code, logis_code, out_loca_type, out_loca, out_date, out_st, out_num)
		values
		('RC'||lpad(#{out_code},4,'0'), #{hq_goods_code}, #{logis_code}, #{out_loca_type}, #{out_loca}, #{out_date}, #{out_st}, #{out_num})
	</update>
	
	<update id="updateOut" parameterType="out">
		update out
		set
		out_num=#{out_num}
		where out_code=#{out_code}
		and hq_goods_code=#{hq_goods_code}	
	</update>
	
	<select id="selectOutSeqNext" resultType="String">
		select seq_out.nextval as out_code from dual
	</select>
		
	<select id="selectOutListCount" resultType="int">
		select 
		count(*)
		from out
		where out_code is not null
		
	</select>
	
	<select id="selectOutByCode" resultType="out" parameterType="str">
		select *
		from out
		where out_code=#{out_code}
	</select>
	
	<select id="outTakingList" resultType="out">
	SELECT
	    b.out_code,
	    b.hq_goods_code,
	    b.logis_code,
	    b.out_loca_type,
	    b.out_loca,
	    b.out_date,
	    b.out_st,
	    b.out_num
	FROM
    	out b
	</select> 

<select id="outTakingSearchList" parameterType="map" resultType="out">
	SELECT 
     b.out_code,
		    b.hq_goods_code,
		    b.logis_code,
		    b.out_loca_type,
		    b.out_loca,
		    b.out_date,
		    b.out_st,
		    b.out_num
	FROM out b

	where 1=1

	    <include refid="searchOutTakingMap" />
	</select>	
	
<select id="outTakingSearchCount" parameterType="map" resultType="int">
	SELECT
	    count(*)
	FROM
	    out b
	 where 1=1
	    <include refid="searchOutTakingMap" />
	
		
	</select>
	
	<select id="getOutTakingDetail" resultType="out">
	SELECT
	    out_code,
	    hq_goods_code,
	    logis_code,
	    out_loca_type,
	    out_loca,
	    out_date,
	    out_st,
	    out_num
	FROM
   		 out
   	WHERE
    	 out_code = #{data}
	   
	</select>

	

</mapper>