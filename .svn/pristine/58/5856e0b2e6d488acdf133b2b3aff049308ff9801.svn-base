package kr.or.fms.hq.controller;


import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Locale;
import java.util.Map;

import javax.annotation.Resource;



import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.servlet.ModelAndView;

import kr.or.fms.command.SearchCriteria;
import kr.or.fms.dto.AttachVO;
import kr.or.fms.dto.ReturnVO;
import kr.or.fms.fran.dto.FranOrderDeVO;
import kr.or.fms.fran.dto.FranOrderVO;
import kr.or.fms.hq.service.HqOrderService;
import kr.or.fms.hq.service.HqReturnService;
import kr.or.fms.service.MenuService;

@Controller
@RequestMapping("/hq")
public class HqOrderController {

	
	@Autowired
	HqOrderService hqOrderService;
	
	@RequestMapping("/order/list")
	public ModelAndView orderList(SearchCriteria cri, FranOrderVO franOrderVo,  ModelAndView mnv, String orderDate)throws SQLException, ParseException{
		String url="hq/order/list";	
		

		
		if(franOrderVo.getFran_appr_st()!=0) {
			cri.getKeywordMap().put("apprSt", String.valueOf(franOrderVo.getFran_appr_st()));
		}
		if(franOrderVo.getOrder_st_code()!=null) {
			cri.getKeywordMap().put("orderSt", franOrderVo.getOrder_st_code());
		}
		
		if(franOrderVo.getFran_code()!=null) {
			cri.getKeywordMap().put("franCode", franOrderVo.getFran_code());
		}
		if(orderDate!=null && !"".equals(orderDate)) {
			
			String[] date = orderDate.split(" - ");
			String startDate = date[0];
			String endDate = date[1];
			
			cri.getKeywordMap().put("startDate", startDate);
			cri.getKeywordMap().put("endDate", endDate);
			
		}	

		cri.setPerPageNum(13);
		
		Map<String, Object> dataMap = hqOrderService.getOrderList(cri);
		
		
		mnv.addObject("dataMap", dataMap);
		mnv.setViewName(url);
		
		return mnv;
	}
	
	@RequestMapping("/order/detail")
	public ModelAndView orderDetail(ModelAndView mnv, String fran_order_code, String fran_appr_st, String fran_code) throws SQLException{
		String url="hq/order/detail";
		
		List<FranOrderDeVO> franOrderDeVO = hqOrderService.readOrder(fran_order_code);
		
		List<String> quickGoods = new ArrayList<String>();
		Map<String, String> countMap = new HashMap<String, String>();
		System.out.println(fran_code);
		countMap.put("fran_code", fran_code);
		
		for(int i=0; i < franOrderDeVO.size(); i++) {
			countMap.put("hq_goods_code",franOrderDeVO.get(i).getHq_goods_code());
			
			List<Integer> whCount = hqOrderService.getQuickCount(countMap);
			
			if (whCount.get(i) !=0 && franOrderDeVO.get(i).getFran_appr_quan() < whCount.get(i)) {
				quickGoods.add(franOrderDeVO.get(i).getHq_goods_code());
			}
			
		}
		System.out.println(quickGoods);
		
		mnv.addObject("quickGoods", quickGoods);
		
		mnv.addObject("fran_appr_st", fran_appr_st);
		mnv.addObject("franOrderDeVO", franOrderDeVO);
		mnv.setViewName(url);
		
		return mnv;
		
	}
	


}
